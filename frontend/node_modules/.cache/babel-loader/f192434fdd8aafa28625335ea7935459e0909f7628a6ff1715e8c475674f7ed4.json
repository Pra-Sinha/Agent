{"ast":null,"code":"var _jsxFileName = \"E:\\\\ticketbooking-ai-agent\\\\frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { auth } from \"../firebase\";\nimport { Box, Paper, TextField, Button, Typography, Stack } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { signOut } from \"firebase/auth\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignOutButton() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => signOut(auth),\n    children: \"Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = SignOutButton;\nexport default function ChatInterface() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [sessionId, setSessionId] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    setSessionId(uuidv4()); // Generate session ID on mount\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    const userMessage = message;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setMessage(\"\");\n    setError(\"\");\n    setIsLoading(true);\n    try {\n      const idToken = await auth.currentUser.getIdToken();\n      const response = await fetch(\"http://localhost:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${idToken}`\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          session_id: sessionId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessages(prev => [...prev, {\n          text: data.response,\n          isUser: false\n        }]);\n      } else {\n        throw new Error(data.detail || \"Something went wrong.\");\n      }\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        text: \"⚠️ GPT failed to respond. Try again.\",\n        isUser: false\n      }]);\n      setError(err.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"chat-paper\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: \"AI Booking Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignOutButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"messages-container\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Box, {\n          className: `message-box ${msg.isUser ? 'message-user' : 'message-bot'}`,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: `message-bubble ${msg.isUser ? 'user-bubble' : 'bot-bubble'}`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"message-box message-bot\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"message-bubble bot-bubble\",\n            children: \"Typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSend,\n        sx: {\n          display: \"flex\",\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 62\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        sx: {\n          mt: 1\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"8iAW2Q8lFFaX/EjMRDc5M7CTpfw=\");\n_c2 = ChatInterface;\nvar _c, _c2;\n$RefreshReg$(_c, \"SignOutButton\");\n$RefreshReg$(_c2, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","Box","Paper","TextField","Button","Typography","Stack","SendIcon","signOut","v4","uuidv4","jsxDEV","_jsxDEV","SignOutButton","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatInterface","_s","message","setMessage","messages","setMessages","error","setError","sessionId","setSessionId","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","e","preventDefault","trim","userMessage","prev","text","isUser","idToken","currentUser","getIdToken","response","fetch","method","headers","body","JSON","stringify","session_id","data","json","ok","Error","detail","err","className","variant","sx","mb","map","msg","idx","ref","component","onSubmit","display","gap","fullWidth","placeholder","value","onChange","target","type","endIcon","color","mt","_c2","$RefreshReg$"],"sources":["E:/ticketbooking-ai-agent/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { Box, Paper, TextField, Button, Typography, Stack } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport './ChatInterface.css';\r\n\r\nfunction SignOutButton() {\r\n  return <button onClick={() => signOut(auth)}>Sign Out</button>;\r\n}\r\n\r\nexport default function ChatInterface() {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [sessionId, setSessionId] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setSessionId(uuidv4()); // Generate session ID on mount\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) return;\r\n\r\n    const userMessage = message;\r\n    setMessages(prev => [...prev, { text: userMessage, isUser: true }]);\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const idToken = await auth.currentUser.getIdToken();\r\n\r\n      const response = await fetch(\"http://localhost:8000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${idToken}`\r\n        },\r\n        body: JSON.stringify({\r\n          message: userMessage,\r\n          session_id: sessionId\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessages(prev => [...prev, { text: data.response, isUser: false }]);\r\n      } else {\r\n        throw new Error(data.detail || \"Something went wrong.\");\r\n      }\r\n\r\n    } catch (err) {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        { text: \"⚠️ GPT failed to respond. Try again.\", isUser: false }\r\n      ]);\r\n      setError(err.message);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"chat-container\">\r\n      <Paper className=\"chat-paper\">\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>AI Booking Assistant</Typography>\r\n        <SignOutButton />\r\n        <Stack className=\"messages-container\">\r\n          {messages.map((msg, idx) => (\r\n            <Box\r\n              key={idx}\r\n              className={`message-box ${msg.isUser ? 'message-user' : 'message-bot'}`}\r\n            >\r\n              <Box className={`message-bubble ${msg.isUser ? 'user-bubble' : 'bot-bubble'}`}>\r\n                {msg.text}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n          {isLoading && (\r\n            <Box className=\"message-box message-bot\">\r\n              <Box className=\"message-bubble bot-bubble\">\r\n                Typing...\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </Stack>\r\n        <Box component=\"form\" onSubmit={handleSend} sx={{ display: \"flex\", gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Type your message...\"\r\n            value={message}\r\n            onChange={e => setMessage(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon />}>\r\n            Send\r\n          </Button>\r\n        </Box>\r\n        {error && <Typography color=\"error\" sx={{ mt: 1 }}>{error}</Typography>}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}